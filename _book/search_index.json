[
["index.html", "Programação em Java Bem vindo!", " Programação em Java Djonathan Luiz de Oliveira Quadras 14/04/2020 Bem vindo! Bem vindo ao livro de programação em Java! Enjoy your visit! :) "],
["sobre-programação.html", "Sobre Programação Sobre o Livro Ferramentas Computacionais", " Sobre Programação Working on it! :) Sobre o Livro Working on it! :) Ferramentas Computacionais Working on it! :) "],
["lógicas-de-programação.html", "Chapter 1 Lógicas de Programação 1.1 Pseudocódigos", " Chapter 1 Lógicas de Programação Working on it! :) 1.1 Pseudocódigos Working on it! :) "],
["princípios-da-programação-em-java.html", "Chapter 2 Princípios da Programação em Java 2.1 Classes 2.2 Objetos 2.3 Variáveis 2.4 Criando o primeiro código em Java", " Chapter 2 Princípios da Programação em Java Working on it! :) 2.1 Classes Working on it! :) 2.2 Objetos Working on it! :) 2.2.1 Atributos ou Propriedades Working on it! :) 2.2.2 Métodos Working on it! :) 2.3 Variáveis Working on it! :) 2.4 Criando o primeiro código em Java Working on it! :) 2.4.1 Criando Variáveis Working on it! :) "],
["operadores.html", "Chapter 3 Operadores 3.1 Operações Matemáticas 3.2 Operadores Relacionais 3.3 Lógica Booleana e Operadores Lógicos", " Chapter 3 Operadores Um artifício essencial para quem programa é a utilização de operadores. Sejam eles matemáticos, lógicos ou relacionais, é praticamente impossível desenvolver um código sem utilizar um operador. Nessa seção serão apresentados e explicados os operadores em linguagem Java. 3.1 Operações Matemáticas É muito comum utilizarmos as operações matemáticas em programação. Frequentemente estaremos somando ou subtraindo duas variáveis. Com isso, torna-se necessário conhecer os operadores matemáticos em java. Os básicos estão listados na tabela abaixo. Table 3.1: Operações Matemáticas Operador Uso Descrição + x + y Soma x e y - x - y Subtrai y de x * x*y Multiplica x por y / x/y Divide x por y % x%y Calcula o resto da divisão de x por y Existem também os operadores incrementais. Estes operadores são utilizados quando queremos acrescentar (ou diminuir) uma unidade no valor de uma variável. Eles estão listados na tabela abaixo. Table 3.2: Operações Matemáticas Úteis Operador Uso Descrição ++ b++ Incrementa 1 em b, avaliando b antes de incrementar ++ b++ Incrementa 1 em b, avaliando b depois de incrementar – b– Decrementa 1 em b, avaliando b antes de incrementar – b– Decrementa 1 em b, avaliando b depois de incrementar 3.2 Operadores Relacionais Os operadores relacionais são utilizados quando queremos estabelecer relações entre as variáveis, ou seja, quando queremos comparar uma variável com a outra. Eles estão apresentados na tabela abaixo. Table 3.3: Operações Relacionais Operador Uso Descrição &gt; x &gt; y x é maior que y &gt;= x &gt;= y x é maior ou igual a y &lt; x &lt; y x é menor que y &lt;= x &lt;= y x é menor ou igual a y == x == y x é igual a y != x != y x é diferente de y Para utilizar outras ferramentas matemáticas, é necessário invocar a classe matemática do Java. Para isso, faz-se double valor = Math. e seleciona-se a função desejada (irá aparecer automaticamente uma lista com todas as opções possíveis. Por exemplo, é possível calcular a raiz quadrada, exponencial e cosseno conforme apresentado a seguir. double raiz = Math.sqrt(9); // raiz quadrada double exponencial = Math.exp(2); // e elevado ao quadrado double cosseno = Math.cos(Math.PI); //cosseno de pi em radianos 3.3 Lógica Booleana e Operadores Lógicos A lógica booleana foi desenvolvida no século 19 pelo matemático George Boole como um esquema para usar métodos algébricos na formalização da lógica e raciocínio. A álgebra booleana trabalha com dois números, 1 e 0. Para a programação, trataremos 1 como sendo “Verdadeiro” e 0 como sendo “falso”. As funções relacionais sempre gerarão resultados booleanos. Dessa forma, é possível utilizar operadores lógicos para trabalhar com as informações e gerar novos resultados. Os operadores lógicos são amplamente utilizados quando queremos criar expressões lógicas. Os operadores lógicos estão apresentados na tabela abaixo. Table 3.4: Operações Matemáticas Úteis Operador Descrição &amp; AND lógico | ou || OR lógico ^ XOR lógico ! NOT lógico 3.3.1 Operador AND O operador AND, ou “e”, retorna “verdadeiro” só e somente só quando está comparando dois booleanos com valor “verdadeiro. Table 3.5: Operações com Operador AND Valor 1 Operador Valor 2 Resultado true &amp; true true true &amp; false false false &amp; false false 3.3.2 Operador OR O operador OR, ou “ou”, retorna “verdadeiro” quando está comparando dois booleanos em que ao menos um tenha valor “verdadeiro. Table 3.6: Operações com Operador OR Valor 1 Operador Valor 2 Resultado true | true true true | false true false | false false 3.3.3 Operador XOR O operador XOR, ou “ou exclusivo”, retorna “verdadeiro” se só e somente só estiver comparando dois booleanos em que somente um dos valores seja “verdadeiro. Table 3.7: Operações com Operador XOR Valor 1 Operador Valor 2 Resultado true ^ true false true ^ false true false ^ false false 3.3.4 Operador NOT O operador NOT, ou “não”, retorna o valor contrário ao valor escolhido. Note que este operador compara dois valores, apenas muda de verdadeiro para falso e vice-versa. Table 3.8: Operações com Operador XOR Operador Valor Resultado ! true false ! false true !! true true Exercícios {-} "],
["extruturas-de-decisão-ou-seleção.html", "Chapter 4 Extruturas de Decisão ou Seleção 4.1 If-Else 4.2 Operador Ternário 4.3 Switch Exercícios", " Chapter 4 Extruturas de Decisão ou Seleção Working on it! :) 4.1 If-Else Working on it! :) 4.2 Operador Ternário Working on it! :) 4.3 Switch Working on it! :) Exercícios Working on it! :) "],
["estruturas-de-repetição.html", "Chapter 5 Estruturas de Repetição 5.1 For 5.2 While 5.3 Do-While Exercicios", " Chapter 5 Estruturas de Repetição Working on it! :) 5.1 For Working on it! :) 5.2 While Working on it! :) 5.3 Do-While Working on it! :) Exercicios "]
]
